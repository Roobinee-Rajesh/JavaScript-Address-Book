const getRandomNumber = (max = 1000) => {
    return Math.floor(Math.random() * max);
  };

  const editname = (id) => {
    editId = id;
    const clickedname= addressbookarr.find((name) => name.id === id);
    btnRef.innerText = "Edit";
    nameRef.value = clickedname.name;
  };

  const deletename = (id) => {
    addressbookarr = addressbookarr.filter((name) => {
      if (name.id !== id) {
        return name;
      }
    });
    render();
  };

const render = () => {
    let addressbookDiv = "";

for (let item of addressbookarr) {
    addressbookDiv += `<div class="d-flex align-items-center justify-content-between p-2 border-bottom border-primary">
                  <p class="fs-5 m-0">${item.name}</p>
                  <div>
                    <button onclick="editTodo(${item.id})" class="btn">Edit</button>
                    <button onclick="deleteTodo(${item.id})" class="btn text-danger">Delete</button>
                  </div>
                </div>`;
  }
  nameRef.innerHTML = addressbookDiv;
};


btnRef.addEventListener("click",()=>{

    if(nameRef.value !== "")
    {
        if(editId===0)
        {
            addressbookarr.push({id:getRandomNumber(),name: nameRef.name,phone:phonenumberRef.phonenumber});
        }
        else{
            addressbookArray=addressbookArray.map((name)=>{
                if(name.id==editId) return{...name,name:nameRef.value,phonenumber:phonenumberRef.value};
                else return name;
            });
        }
        editId=0;
        nameRef.value="";
        btnRef.innerText="Add";
        render();
    }
    else{
        nameRef.classList.replace("border-primary", "is-invalid");
    }
        
    });

    nameRef.addEventListener("keyup", () => {
        if (nameRef.value !== "") {
            nameRef.classList.replace("is-invalid", "border-primary");
        } else {
            nameRef.classList.replace("border-primary", "is-invalid");
        }
      });